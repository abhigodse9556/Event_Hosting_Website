/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-04-06 09:26:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import ServersidePackages.PromosObject;
import ServersidePackages.EduObject;
import ServersidePackages.BusinessObject;
import ServersidePackages.CulturalObject;
import ServersidePackages.TrekkObject;
import ServersidePackages.MusicObject;
import ServersidePackages.SportObject;
import java.util.Base64;
import ServersidePackages.DataObject;
import ServersidePackages.DataObject;
import java.util.List;
import com.mysql.cj.jdbc.Blob;
import java.io.*;
import java.sql.*;

public final class allevents_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("ServersidePackages.EduObject");
    _jspx_imports_classes.add("java.util.Base64");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.mysql.cj.jdbc.Blob");
    _jspx_imports_classes.add("ServersidePackages.MusicObject");
    _jspx_imports_classes.add("ServersidePackages.BusinessObject");
    _jspx_imports_classes.add("ServersidePackages.PromosObject");
    _jspx_imports_classes.add("ServersidePackages.CulturalObject");
    _jspx_imports_classes.add("ServersidePackages.SportObject");
    _jspx_imports_classes.add("ServersidePackages.TrekkObject");
    _jspx_imports_classes.add("ServersidePackages.DataObject");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("     <head>\n");
      out.write("      <meta charset=\"UTF-8\">\n");
      out.write("      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("\n");
      out.write("      <!--=============== FAVICON ===============-->\n");
      out.write("      <link rel=\"shortcut icon\" href=\"assets/img/favicon.png\" type=\"image/x-icon\">\n");
      out.write("\n");
      out.write("      <!--=============== REMIXICONS ===============-->\n");
      out.write("      <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/remixicon/3.4.0/remixicon.css\" crossorigin=\"\">\n");
      out.write("      \n");
      out.write("      <!--=============== CSS ===============-->\n");
      out.write("      <link rel=\"stylesheet\" href=\"assets/css/styles.css\">\n");
      out.write("\n");
      out.write("      <title>Event Management Website</title>\n");
      out.write("      <style>\n");
      out.write("          \n");
      out.write("          .all_events{\n");
      out.write("              display: flex;\n");
      out.write("              flex-wrap: wrap;\n");
      out.write("              justify-content: space-between;\n");
      out.write("              \n");
      out.write("              h2{\n");
      out.write("                  position: fixed;\n");
      out.write("              }\n");
      out.write("          } \n");
      out.write("          \n");
      out.write("          .sport_events,\n");
      out.write("          .dj_events,\n");
      out.write("          .business_events,\n");
      out.write("          .cultural_events,\n");
      out.write("          .edu_events,\n");
      out.write("          .promo_events,\n");
      out.write("          .trekk_events{\n");
      out.write("              display: none;\n");
      out.write("              flex-wrap: wrap;\n");
      out.write("              justify-content: space-between;\n");
      out.write("              \n");
      out.write("              h2{\n");
      out.write("                  position: fixed;\n");
      out.write("              }\n");
      out.write("          }\n");
      out.write("          \n");
      out.write("          .events-box{\n");
      out.write("              width: 25%;\n");
      out.write("              cursor: pointer;\n");
      out.write("          }\n");
      out.write("          \n");
      out.write("          .poster-image{\n");
      out.write("              width: 200px;\n");
      out.write("              height: 300px;\n");
      out.write("          }\n");
      out.write("         \n");
      out.write("      </style>\n");
      out.write("   </head>\n");
      out.write("   \n");
      out.write("   <!--==================== HEADER ====================-->\n");
      out.write("      <header class=\"header\" id=\"header\">\n");
      out.write("        <nav class=\"nav container\">\n");
      out.write("            <a href=\"#\" class=\"nav__logo\">\n");
      out.write("                <img src=\"assets/img/logo.svg\" alt=\"logo\">\n");
      out.write("            </a>\n");
      out.write("\n");
      out.write("            <div class=\"nav__menu\" id=\"nav-menu\">\n");
      out.write("                <ul class=\"nav__list\">\n");
      out.write("                    <li class=\"nav__item\">\n");
      out.write("                        <a href=\"index.jsp\" class=\"nav__link\">Home</a>\n");
      out.write("                    </li>\n");
      out.write("\n");
      out.write("                    <li class=\"nav__item\">\n");
      out.write("                        <a href=\"events.jsp\" class=\"nav__link\">Events</a>\n");
      out.write("                    </li>\n");
      out.write("\n");
      out.write("                    <li class=\"nav__item\">\n");
      out.write("                        <a href=\"about.jsp\" class=\"nav__link\">About</a>\n");
      out.write("                    </li>\n");
      out.write("\n");
      out.write("                    <li class=\"nav__item\">\n");
      out.write("                        <a href=\"contact.jsp\" class=\"nav__link\">Contact</a>\n");
      out.write("                    </li>\n");
      out.write("                </ul>\n");
      out.write("                <div class=\"nav__buttons\">\n");
      out.write("                    <a href=\"login.jsp\" class=\"nav__button-ghost\">I am a Participant</a>\n");
      out.write("                    <a href=\"register.jsp\" class=\"nav__button-ghost\">I am an Organizer</a>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <!--close button-->\n");
      out.write("                <div class=\"nav__close\" id=\"nav-close\">\n");
      out.write("                    <i class=\"ri-close-line\"></i>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <!--toggle button-->\n");
      out.write("            <div class=\"nav__toggle\" id=\"nav-toggle\">\n");
      out.write("                <i class=\"ri-menu-line\"></i>\n");
      out.write("            </div>\n");
      out.write("        </nav>\n");
      out.write("         \n");
      out.write("      </header>\n");
      out.write("   \n");
      out.write("    <body>\n");
      out.write("      <!--==================== MAIN ====================-->\n");
      out.write("      <main class=\"main\">\n");
      out.write("         <!--==================== HOME ====================-->\n");
      out.write("         <section class=\"home\">\n");
      out.write("            <div class=\"event__container container\" style=\"margin-top: 100px\">\n");
      out.write("                \n");
      out.write("                <div>\n");
      out.write("                    <p>Event Categories</p>\n");
      out.write("          <select id=\"event_type\" name=\"event_type\" onchange=\"showSelectedCategory()\">\n");
      out.write("            <option value=\"\"></option>\n");
      out.write("            <option value=\"All Events\" selected>All Events</option>\n");
      out.write("            <option value=\"Sports\">Sports</option>\n");
      out.write("            <option value=\"Trekking / Adventures\">Trekking / Adventures</option>\n");
      out.write("            <option value=\"Cultural\">Cultural</option>\n");
      out.write("            <option value=\"Musical / DJ\">Musical / DJ</option>\n");
      out.write("            <option value=\"Business\">Business</option>\n");
      out.write("            <option value=\"Educational\">Educational</option>\n");
      out.write("            <option value=\"Promos / Expos\">Promos / Expos</option>\n");
      out.write("          </select>\n");
      out.write("                </div>\n");
      out.write("                              \n");
      out.write("<div id=\"all_events\" class=\"all_events\">\n");
      out.write("    \n");
      out.write("    ");
 
    List<DataObject> dataList = (List<DataObject>) request.getAttribute("dataList");
    for (DataObject data : dataList) {
    
      out.write("\n");
      out.write("    <div class=\"events-box\">\n");
      out.write("        <h1>");
      out.print( data.getId() );
      out.write("</h1>\n");
      out.write("        ");
 
        Blob posterBlob1 = data.getPoster();
        if (posterBlob1 != null) {
            try (InputStream inputStream = posterBlob1.getBinaryStream()) {
                ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
                byte[] buffer = new byte[4096];
                int bytesRead = -1;
                while ((bytesRead = inputStream.read(buffer)) != -1) {
                    outputStream.write(buffer, 0, bytesRead);
                }
                byte[] imageBytes = outputStream.toByteArray();
                String base64Image = Base64.getEncoder().encodeToString(imageBytes);
                out.println("<img src=\"data:image/jpeg;base64," + base64Image + "\" class=\"poster-image\">");
            } catch (SQLException | IOException e) {
                e.printStackTrace();
            }
        }
        
      out.write("\n");
      out.write("        <h1>");
      out.print( data.getName() );
      out.write("</h1>\n");
      out.write("        <h1>");
      out.print( data.getDate() );
      out.write("</h1>\n");
      out.write("        <form action=\"Servlet?id=event_details\" method=\"post\">\n");
      out.write("    <input type=\"hidden\" name=\"event-id\" value=\"");
      out.print( data.getId());
      out.write("\">\n");
      out.write("    <button type=\"submit\" class=\"nav__link\">Show Details</button>\n");
      out.write("</form>\n");
      out.write("    </div>\n");
      out.write("    ");
 
    }
    
      out.write("\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div id=\"sport_events\" class=\"sport_events\">\n");
      out.write("    \n");
      out.write("    ");
 
    List<SportObject> sportList = (List<SportObject>) request.getAttribute("sportList");
    for (SportObject data : sportList) {
    
      out.write("\n");
      out.write("    <div class=\"events-box\">\n");
      out.write("        <h1>");
      out.print( data.getId() );
      out.write("</h1>\n");
      out.write("        ");
 
        Blob posterBlob1 = data.getPoster();
        if (posterBlob1 != null) {
            try (InputStream inputStream = posterBlob1.getBinaryStream()) {
                ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
                byte[] buffer = new byte[4096];
                int bytesRead = -1;
                while ((bytesRead = inputStream.read(buffer)) != -1) {
                    outputStream.write(buffer, 0, bytesRead);
                }
                byte[] imageBytes = outputStream.toByteArray();
                String base64Image = Base64.getEncoder().encodeToString(imageBytes);
                out.println("<img src=\"data:image/jpeg;base64," + base64Image + "\" class=\"poster-image\">");
            } catch (SQLException | IOException e) {
                e.printStackTrace();
            }
        }
        
      out.write("\n");
      out.write("        <h1>");
      out.print( data.getName() );
      out.write("</h1>\n");
      out.write("        <h1>");
      out.print( data.getDate() );
      out.write("</h1>\n");
      out.write("        <form action=\"Servlet?id=event_details\" method=\"post\">\n");
      out.write("    <input type=\"hidden\" name=\"event-id\" value=\"");
      out.print( data.getId());
      out.write("\">\n");
      out.write("    <button type=\"submit\" class=\"nav__link\">Show Details</button>\n");
      out.write("</form>\n");
      out.write("    </div>\n");
      out.write("    ");
 
    }
    
      out.write("\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div id=\"dj_events\" class=\"dj_events\">\n");
      out.write("    \n");
      out.write("    ");
 
    List<MusicObject> musicList = (List<MusicObject>) request.getAttribute("musicList");
    for (MusicObject data : musicList) {
    
      out.write("\n");
      out.write("    <div class=\"events-box\">\n");
      out.write("        <h1>");
      out.print( data.getId() );
      out.write("</h1>\n");
      out.write("        ");
 
        Blob posterBlob1 = data.getPoster();
        if (posterBlob1 != null) {
            try (InputStream inputStream = posterBlob1.getBinaryStream()) {
                ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
                byte[] buffer = new byte[4096];
                int bytesRead = -1;
                while ((bytesRead = inputStream.read(buffer)) != -1) {
                    outputStream.write(buffer, 0, bytesRead);
                }
                byte[] imageBytes = outputStream.toByteArray();
                String base64Image = Base64.getEncoder().encodeToString(imageBytes);
                out.println("<img src=\"data:image/jpeg;base64," + base64Image + "\" class=\"poster-image\">");
            } catch (SQLException | IOException e) {
                e.printStackTrace();
            }
        }
        
      out.write("\n");
      out.write("        <h1>");
      out.print( data.getName() );
      out.write("</h1>\n");
      out.write("        <h1>");
      out.print( data.getDate() );
      out.write("</h1>\n");
      out.write("        <form action=\"Servlet?id=event_details\" method=\"post\">\n");
      out.write("    <input type=\"hidden\" name=\"event-id\" value=\"");
      out.print( data.getId());
      out.write("\">\n");
      out.write("    <button type=\"submit\" class=\"nav__link\">Show Details</button>\n");
      out.write("</form>\n");
      out.write("    </div>\n");
      out.write("    ");
 
    }
    
      out.write("\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("<div id=\"trekk_events\" class=\"trekk_events\">\n");
      out.write("    \n");
      out.write("    ");
 
    List<TrekkObject> trekkList = (List<TrekkObject>) request.getAttribute("trekkList");
    for (TrekkObject data : trekkList) {
    
      out.write("\n");
      out.write("    <div class=\"events-box\">\n");
      out.write("        <h1>");
      out.print( data.getId() );
      out.write("</h1>\n");
      out.write("        ");
 
        Blob posterBlob1 = data.getPoster();
        if (posterBlob1 != null) {
            try (InputStream inputStream = posterBlob1.getBinaryStream()) {
                ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
                byte[] buffer = new byte[4096];
                int bytesRead = -1;
                while ((bytesRead = inputStream.read(buffer)) != -1) {
                    outputStream.write(buffer, 0, bytesRead);
                }
                byte[] imageBytes = outputStream.toByteArray();
                String base64Image = Base64.getEncoder().encodeToString(imageBytes);
                out.println("<img src=\"data:image/jpeg;base64," + base64Image + "\" class=\"poster-image\">");
            } catch (SQLException | IOException e) {
                e.printStackTrace();
            }
        }
        
      out.write("\n");
      out.write("        <h1>");
      out.print( data.getName() );
      out.write("</h1>\n");
      out.write("        <h1>");
      out.print( data.getDate() );
      out.write("</h1>\n");
      out.write("        <form action=\"Servlet?id=event_details\" method=\"post\">\n");
      out.write("    <input type=\"hidden\" name=\"event-id\" value=\"");
      out.print( data.getId());
      out.write("\">\n");
      out.write("    <button type=\"submit\" class=\"nav__link\">Show Details</button>\n");
      out.write("</form>\n");
      out.write("    </div>\n");
      out.write("    ");
 
    }
    
      out.write("\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div id=\"cultural_events\" class=\"cultural_events\">\n");
      out.write("    \n");
      out.write("    ");
 
    List<CulturalObject> culturalList = (List<CulturalObject>) request.getAttribute("culturalList");
    for (CulturalObject data : culturalList) {
    
      out.write("\n");
      out.write("    <div class=\"events-box\">\n");
      out.write("        <h1>");
      out.print( data.getId() );
      out.write("</h1>\n");
      out.write("        ");
 
        Blob posterBlob1 = data.getPoster();
        if (posterBlob1 != null) {
            try (InputStream inputStream = posterBlob1.getBinaryStream()) {
                ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
                byte[] buffer = new byte[4096];
                int bytesRead = -1;
                while ((bytesRead = inputStream.read(buffer)) != -1) {
                    outputStream.write(buffer, 0, bytesRead);
                }
                byte[] imageBytes = outputStream.toByteArray();
                String base64Image = Base64.getEncoder().encodeToString(imageBytes);
                out.println("<img src=\"data:image/jpeg;base64," + base64Image + "\" class=\"poster-image\">");
            } catch (SQLException | IOException e) {
                e.printStackTrace();
            }
        }
        
      out.write("\n");
      out.write("        <h1>");
      out.print( data.getName() );
      out.write("</h1>\n");
      out.write("        <h1>");
      out.print( data.getDate() );
      out.write("</h1>\n");
      out.write("        <form action=\"Servlet?id=event_details\" method=\"post\">\n");
      out.write("    <input type=\"hidden\" name=\"event-id\" value=\"");
      out.print( data.getId());
      out.write("\">\n");
      out.write("    <button type=\"submit\" class=\"nav__link\">Show Details</button>\n");
      out.write("</form>\n");
      out.write("    </div>\n");
      out.write("    ");
 
    }
    
      out.write("\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div id=\"business_events\" class=\"business_events\">\n");
      out.write("    \n");
      out.write("    ");
 
    List<BusinessObject> businessList = (List<BusinessObject>) request.getAttribute("businessList");
    for (BusinessObject data : businessList) {
    
      out.write("\n");
      out.write("    <div class=\"events-box\">\n");
      out.write("        <h1>");
      out.print( data.getId() );
      out.write("</h1>\n");
      out.write("        ");
 
        Blob posterBlob1 = data.getPoster();
        if (posterBlob1 != null) {
            try (InputStream inputStream = posterBlob1.getBinaryStream()) {
                ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
                byte[] buffer = new byte[4096];
                int bytesRead = -1;
                while ((bytesRead = inputStream.read(buffer)) != -1) {
                    outputStream.write(buffer, 0, bytesRead);
                }
                byte[] imageBytes = outputStream.toByteArray();
                String base64Image = Base64.getEncoder().encodeToString(imageBytes);
                out.println("<img src=\"data:image/jpeg;base64," + base64Image + "\" class=\"poster-image\">");
            } catch (SQLException | IOException e) {
                e.printStackTrace();
            }
        }
        
      out.write("\n");
      out.write("       <h1>");
      out.print( data.getName() );
      out.write("</h1>\n");
      out.write("        <h1>");
      out.print( data.getDate() );
      out.write("</h1>\n");
      out.write("        <form action=\"Servlet?id=event_details\" method=\"post\">\n");
      out.write("    <input type=\"hidden\" name=\"event-id\" value=\"");
      out.print( data.getId());
      out.write("\">\n");
      out.write("    <button type=\"submit\" class=\"nav__link\">Show Details</button>\n");
      out.write("</form>\n");
      out.write("    </div>\n");
      out.write("    ");
 
    }
    
      out.write("\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div id=\"edu_events\" class=\"edu_events\">\n");
      out.write("    \n");
      out.write("    ");
 
    List<EduObject> eduList = (List<EduObject>) request.getAttribute("eduList");
    for (EduObject data : eduList) {
    
      out.write("\n");
      out.write("    <div class=\"events-box\">\n");
      out.write("        <h1>");
      out.print( data.getId() );
      out.write("</h1>\n");
      out.write("        ");
 
        Blob posterBlob1 = data.getPoster();
        if (posterBlob1 != null) {
            try (InputStream inputStream = posterBlob1.getBinaryStream()) {
                ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
                byte[] buffer = new byte[4096];
                int bytesRead = -1;
                while ((bytesRead = inputStream.read(buffer)) != -1) {
                    outputStream.write(buffer, 0, bytesRead);
                }
                byte[] imageBytes = outputStream.toByteArray();
                String base64Image = Base64.getEncoder().encodeToString(imageBytes);
                out.println("<img src=\"data:image/jpeg;base64," + base64Image + "\" class=\"poster-image\">");
            } catch (SQLException | IOException e) {
                e.printStackTrace();
            }
        }
        
      out.write("\n");
      out.write("        <h1>");
      out.print( data.getName() );
      out.write("</h1>\n");
      out.write("        <h1>");
      out.print( data.getDate() );
      out.write("</h1>\n");
      out.write("        <form action=\"Servlet?id=event_details\" method=\"post\">\n");
      out.write("    <input type=\"hidden\" name=\"event-id\" value=\"");
      out.print( data.getId());
      out.write("\">\n");
      out.write("    <button type=\"submit\" class=\"nav__link\">Show Details</button>\n");
      out.write("</form>\n");
      out.write("    </div>\n");
      out.write("    ");
 
    }
    
      out.write("\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div id=\"promo_events\" class=\"promo_events\">\n");
      out.write("    \n");
      out.write("    ");
 
    List<PromosObject> promoList = (List<PromosObject>) request.getAttribute("promoList");
    for (PromosObject data : promoList) {
    
      out.write("\n");
      out.write("    <div class=\"events-box\">\n");
      out.write("        <h1>");
      out.print( data.getId() );
      out.write("</h1>\n");
      out.write("        ");
 
        Blob posterBlob1 = data.getPoster();
        if (posterBlob1 != null) {
            try (InputStream inputStream = posterBlob1.getBinaryStream()) {
                ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
                byte[] buffer = new byte[4096];
                int bytesRead = -1;
                while ((bytesRead = inputStream.read(buffer)) != -1) {
                    outputStream.write(buffer, 0, bytesRead);
                }
                byte[] imageBytes = outputStream.toByteArray();
                String base64Image = Base64.getEncoder().encodeToString(imageBytes);
                out.println("<img src=\"data:image/jpeg;base64," + base64Image + "\" class=\"poster-image\">");
            } catch (SQLException | IOException e) {
                e.printStackTrace();
            }
        }
        
      out.write("\n");
      out.write("        <h1>");
      out.print( data.getName() );
      out.write("</h1>\n");
      out.write("        <h1>");
      out.print( data.getDate() );
      out.write("</h1>\n");
      out.write("        <form action=\"Servlet?id=event_details\" method=\"post\">\n");
      out.write("    <input type=\"hidden\" name=\"event-id\" value=\"");
      out.print( data.getId());
      out.write("\">\n");
      out.write("    <button type=\"submit\" class=\"nav__link\">Show Details</button>\n");
      out.write("</form>\n");
      out.write("    </div>\n");
      out.write("    ");
 
    }
    
      out.write("\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("                <div class=\"home__images\">\n");
      out.write("                    <img src=\"assets/img/img-44.png\" alt=\"image\" class=\"home__img-4\"  style=\"z-index: -1; filter: blur(3px); position: fixed;\">\n");
      out.write("                    <img src=\"assets/img/img-3.png\" alt=\"image\" class=\"home__img-3\"  style=\"z-index: -1; filter: blur(3px); position: fixed;\">\n");
      out.write("                    <img src=\"assets/img/img-2.png\" alt=\"image\" class=\"home__img-2\"  style=\"z-index: -1; filter: blur(3px); position: fixed;\">\n");
      out.write("                    <img src=\"assets/img/img-11.png\" alt=\"image\" class=\"home__img-1\"  style=\"z-index: -1; filter: blur(3px); position: fixed;\">\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("    \n");
      out.write("    \n");
      out.write("         </section>\n");
      out.write("      </main>\n");
      out.write("      \n");
      out.write("     \n");
      out.write("   </body>\n");
      out.write("   \n");
      out.write("\n");
      out.write("   <script>\n");
      out.write("       function showSelectedCategory() {\n");
      out.write("            var selectedCategory = document.getElementById(\"event_type\").value;\n");
      out.write("            var all_events = document.getElementById(\"all_events\");\n");
      out.write("            var sport_events = document.getElementById(\"sport_events\");\n");
      out.write("            var dj_events = document.getElementById(\"dj_events\");\n");
      out.write("            var trekk_events = document.getElementById(\"trekk_events\");\n");
      out.write("            var cultural_events = document.getElementById(\"cultural_events\");\n");
      out.write("            var business_events = document.getElementById(\"business_events\");\n");
      out.write("            var edu_events = document.getElementById(\"edu_events\");\n");
      out.write("            var promo_events = document.getElementById(\"promo_events\");\n");
      out.write("            \n");
      out.write("\n");
      out.write("            // Show the selected event category\n");
      out.write("            if (selectedCategory === \"All Events\") {\n");
      out.write("                all_events.style.display = \"flex\";\n");
      out.write("                sport_events.style.display = \"none\";\n");
      out.write("                dj_events.style.display = \"none\";\n");
      out.write("                trekk_events.style.display = \"none\";\n");
      out.write("                cultural_events.style.display = \"none\";\n");
      out.write("                business_events.style.display = \"none\";\n");
      out.write("                edu_events.style.display = \"none\";\n");
      out.write("                promo_events.style.display = \"none\";\n");
      out.write("            } else if (selectedCategory === \"Sports\") {\n");
      out.write("                all_events.style.display = \"none\";\n");
      out.write("                sport_events.style.display = \"flex\";\n");
      out.write("                dj_events.style.display = \"none\";\n");
      out.write("                trekk_events.style.display = \"none\";\n");
      out.write("                cultural_events.style.display = \"none\";\n");
      out.write("                business_events.style.display = \"none\";\n");
      out.write("                edu_events.style.display = \"none\";\n");
      out.write("                promo_events.style.display = \"none\";\n");
      out.write("            }else if (selectedCategory === \"Musical / DJ\") {\n");
      out.write("                all_events.style.display = \"none\";\n");
      out.write("                sport_events.style.display = \"none\";\n");
      out.write("                dj_events.style.display = \"flex\";\n");
      out.write("                trekk_events.style.display = \"none\";\n");
      out.write("                cultural_events.style.display = \"none\";\n");
      out.write("                business_events.style.display = \"none\";\n");
      out.write("                edu_events.style.display = \"none\";\n");
      out.write("                promo_events.style.display = \"none\";\n");
      out.write("            }else if (selectedCategory === \"Business\") {\n");
      out.write("                all_events.style.display = \"none\";\n");
      out.write("                sport_events.style.display = \"none\";\n");
      out.write("                dj_events.style.display = \"none\";\n");
      out.write("                trekk_events.style.display = \"none\";\n");
      out.write("                cultural_events.style.display = \"none\";\n");
      out.write("                business_events.style.display = \"flex\";\n");
      out.write("                edu_events.style.display = \"none\";\n");
      out.write("                promo_events.style.display = \"none\";\n");
      out.write("            }else if (selectedCategory === \"Trekking / Adventures\") {\n");
      out.write("                all_events.style.display = \"none\";\n");
      out.write("                sport_events.style.display = \"none\";\n");
      out.write("                dj_events.style.display = \"none\";\n");
      out.write("                trekk_events.style.display = \"flex\";\n");
      out.write("                cultural_events.style.display = \"none\";\n");
      out.write("                business_events.style.display = \"none\";\n");
      out.write("                edu_events.style.display = \"none\";\n");
      out.write("                promo_events.style.display = \"none\";\n");
      out.write("            }else if (selectedCategory === \"Cultural\") {\n");
      out.write("                all_events.style.display = \"none\";\n");
      out.write("                sport_events.style.display = \"none\";\n");
      out.write("                dj_events.style.display = \"none\";\n");
      out.write("                trekk_events.style.display = \"none\";\n");
      out.write("                cultural_events.style.display = \"flex\";\n");
      out.write("                business_events.style.display = \"none\";\n");
      out.write("                edu_events.style.display = \"none\";\n");
      out.write("                promo_events.style.display = \"none\";\n");
      out.write("            }else if (selectedCategory === \"Educational\") {\n");
      out.write("                all_events.style.display = \"none\";\n");
      out.write("                sport_events.style.display = \"none\";\n");
      out.write("                dj_events.style.display = \"none\";\n");
      out.write("                trekk_events.style.display = \"none\";\n");
      out.write("                cultural_events.style.display = \"none\";\n");
      out.write("                business_events.style.display = \"none\";\n");
      out.write("                edu_events.style.display = \"flex\";\n");
      out.write("                promo_events.style.display = \"none\";\n");
      out.write("            }else if (selectedCategory === \"Promos / Expos\") {\n");
      out.write("                all_events.style.display = \"none\";\n");
      out.write("                sport_events.style.display = \"none\";\n");
      out.write("                dj_events.style.display = \"none\";\n");
      out.write("                trekk_events.style.display = \"none\";\n");
      out.write("                cultural_events.style.display = \"none\";\n");
      out.write("                business_events.style.display = \"none\";\n");
      out.write("                edu_events.style.display = \"none\";\n");
      out.write("                promo_events.style.display = \"flex\";\n");
      out.write("            }\n");
      out.write("            // Show other event category elements based on selected option\n");
      out.write("        }\n");
      out.write("   </script>\n");
      out.write("<script src=\"assets/js/gsap.min.js\"></script>\n");
      out.write("\n");
      out.write("<!-- MAIN JS -->\n");
      out.write("<script src=\"assets/js/main.js\"></script>\n");
      out.write("\n");
      out.write("<script src=\"script.js\"></script>\n");
      out.write("   \n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
